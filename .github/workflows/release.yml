name: Build and Release

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.20'

      - name: Setup C++ compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential g++

      - name: Configure CMake (Release)
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: cmake --build build -j

      - name: Create build artifacts
        run: |
          cd build
          tar -czf ../build-artifacts.tar.gz . # Dosya adını sabitliyoruz
          cd ..

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: "build-artifacts.tar.gz"

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: build
    # Sadece main veya development branch'ine push yapıldığında çalışır
    if: success() && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }} # Commit atabilmek için oluşturduğumuz token'ı kullanıyoruz

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # package-lock.json varsa "npm ci" kullanmak daha hızlıdır
      - name: Install dependencies
        run: npm install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Run semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release